// <auto-generated />
using System;
using COAE_PDF_BACKEND.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COAE_PDF_BACKEND.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220727183157_Inicializando banco")]
    partial class Inicializandobanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Advisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcessoId")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Advisors");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.AdvisorProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AdvisorProjects");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FrequencySheetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FrequencySheetId");

                    b.ToTable("Frequency");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.FrequencySheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("FrequencySheets");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcessoId")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.StudentProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentProjects");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.AdvisorProject", b =>
                {
                    b.HasOne("COAE_PDF_BACKEND.Models.Advisor", "Advisor")
                        .WithMany("Projects")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COAE_PDF_BACKEND.Models.Project", "Project")
                        .WithMany("RegisteredAdvisors")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advisor");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Frequency", b =>
                {
                    b.HasOne("COAE_PDF_BACKEND.Models.FrequencySheet", "FrequencySheet")
                        .WithMany("Frequencies")
                        .HasForeignKey("FrequencySheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrequencySheet");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.FrequencySheet", b =>
                {
                    b.HasOne("COAE_PDF_BACKEND.Models.Project", "Project")
                        .WithMany("FrequencySheets")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.StudentProject", b =>
                {
                    b.HasOne("COAE_PDF_BACKEND.Models.Project", "Project")
                        .WithMany("RegisteredStudents")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COAE_PDF_BACKEND.Models.Student", "Student")
                        .WithMany("Projects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Advisor", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.FrequencySheet", b =>
                {
                    b.Navigation("Frequencies");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Project", b =>
                {
                    b.Navigation("FrequencySheets");

                    b.Navigation("RegisteredAdvisors");

                    b.Navigation("RegisteredStudents");
                });

            modelBuilder.Entity("COAE_PDF_BACKEND.Models.Student", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
